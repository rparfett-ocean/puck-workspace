/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                         |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>
#include "platform.h"
#include "xil_printf.h"
#include "vga_modes.h"
#include "xvidc.h"
#include "xavbuf.h"
#include "xavbuf_clk.h"
#include "xvidc.h"
#include "xiicps.h"
#include "sensor.h"
#include "dac.h"
#include "Mask.h"
#include "TestBenchDispatcher.h"
#include "CHUtils.h"
#include "Timer.h"
#include "I2C.h"
#include "Registers.h"
#include "xdpdma_video.h"
#include "gamma.h"

#ifdef DEBUG
#define dbg(x...) 	xil_printf(x)
#else
#define dbg(x...)
#endif

int main()
{
	u32 RegVal;
	u32 DpLines = 0x339;

    init_platform();
    CHUtils_colorBars();
    CHUtils_camPower( false );

    RegVal = Xil_In32(FPGA_REG_BASE);

 	dbg("Ocean Ortho Puck 720\n\r");
    dbg("FPGA Version = %x\n\r", Xil_In32(FPGA_REG_BASE) );

    if( !I2C_init() ) {
		dbg("Unable to initialize the I2C bus\r\n");
		return XST_FAILURE;
    }

//	run_dppsu();
    // Setting the Display Port line count register to the correct value.
//	Xil_Out32(0xFD4A0184, DpLines);

	//Mask_init();

	//Gamma_select(1.8);

    Timer_setupPIT( 1000 );

    sleep( 1 );

    TestBenchDispatcher_init();
    CHUtils_init();

     while(1){
    	 TestBenchDispatcher_poll();
     }


    cleanup_platform();
    return 0;
}
